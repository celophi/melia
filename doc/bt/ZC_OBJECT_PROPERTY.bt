//--------------------------------------
//--- 010 Editor v6.0.2 Binary Template
//
// File: ZC_OBJECT_PROPERTY.bt
// Author: Tachiorz, exec, celophi
// Revision:
// Purpose:
//--------------------------------------

#include "common.bt"

enum OBJP_TYPES { OBJP_FLOAT, OBJP_INT, OBJP_STRING };

typedef struct 
{
    int id;
    switch(getPropertyType(id)) {
        case OBJP_STRING:
            lpString val;
            break;
        case OBJP_INT:
            int32 val;
            break;
        case OBJP_FLOAT:
            float val;
            break;
    }
}
property <read=propertyRead, optimize=false>;

string propertyRead(property &p)
{
    local char ret[];
    local char val_type[];
    
    switch(getPropertyType(p.id)) {
        case OBJP_STRING:
            SPrintf(ret, "%d : %s ", p.id, p.val.text);
            break;
        case OBJP_INT:
            SPrintf(ret, "%d : %d" , p.id, p.val);
            break;
        case OBJP_FLOAT:
            SPrintf(ret, "%d : %.0f" , p.id, p.val);
            break;
    }

    return ret;
}

int getPropertyType(int id)
{
    switch(id) {
        case 41: 
        case 4591:
        case 7118:
            return OBJP_STRING;
            break;
        case 4601:
            return OBJP_INT;
            break;
        default:
            return OBJP_FLOAT;
            break;
    }
}

short op;
int sequence;
short size;

int64 characterId;

local int isTrickPacket; // wtf IMC.
int a;
for(i=0; i<size-16;i+=0)
{
    property prop;
    i += sizeof(prop);
}
